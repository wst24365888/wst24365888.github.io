<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xyphuz&#39;s Notes</title>
  <icon>https://www.gravatar.com/avatar/1aec3d61336b01cb1da20daecd02d8c5</icon>
  <subtitle>Home</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wst24365888.github.io/"/>
  <updated>2019-08-11T13:31:40.253Z</updated>
  <id>http://wst24365888.github.io/</id>
  
  <author>
    <name>Xyphuz</name>
    <email>xyphuzwu@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>淺談Dart中的Mixin</title>
    <link href="http://wst24365888.github.io/dart-mixin/"/>
    <id>http://wst24365888.github.io/dart-mixin/</id>
    <published>2019-08-11T10:04:22.000Z</published>
    <updated>2019-08-11T13:31:40.253Z</updated>
    
    <content type="html"><![CDATA[<p>這篇本來要跟<a href="https://wst24365888.github.io/dart-extends-and-implements/">上一篇</a>一起寫</p><p>直到我發現Dart中Mixin的觀念其實多到可以自成一篇QQ</p><h2 id="觀念"><a href="#觀念" class="headerlink" title="觀念"></a>觀念</h2><p>先來講講一些觀念:</p><ul><li><p>Mixin是物件導向語言中的一種類，不過每種語言中的Mixin類特性不盡相同</p></li><li><p>Mixin類自帶方法的實現，無須依賴子類(當然子類要override也不是不行啦)</p></li><li><p>Mixin類責任單一，要寫多種功能請寫多個Mixin類</p></li><li><p>Mixin並非多重繼承(Multiple Inheritance)，也不是接口(Interface)，不過功能上蠻像的</p></li><li><p>在Dart中，可實例化的類與無法實例化的抽象類，都能拿來當作Mixin類</p></li><li><p>在Dart中，可以使用With這個關鍵字Mixin多個Mixin類，但不破壞單繼承的特性</p></li></ul><p>看完上述這幾點，是不是心裡只有 “馬的，工三小?”</p><h2 id="舉個例子"><a href="#舉個例子" class="headerlink" title="舉個例子"></a>舉個例子</h2><p>接下來的話就來舉個例子好了</p><p>現在有兩種技能: Teach and Drive</p><p>而且有兩種職業: Teacher and Driver</p><p>現在假設這兩個職業都各持有Teach and Drive這兩個技能</p><h3 id="Java-v-s-Dart"><a href="#Java-v-s-Dart" class="headerlink" title="Java v.s. Dart"></a>Java v.s. Dart</h3><p>Java版本:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Some properties and methods...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Teach</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">canTeach</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Drive</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">canDrive</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">Human</span> <span class="keyword">implements</span> <span class="title">Teach</span>, <span class="title">Drive</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">canTeach</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Yes, a human can teach."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">canDrive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Yes, a human can drive."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Driver</span> <span class="keyword">extends</span> <span class="title">Human</span> <span class="keyword">implements</span> <span class="title">Teach</span>, <span class="title">Drive</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">canTeach</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Yes, a human can teach."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">canDrive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Yes, a human can drive."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;   </span><br><span class="line">  </span><br><span class="line">    Teacher teacher = <span class="keyword">new</span> Teacher();</span><br><span class="line">    teacher.canTeach();</span><br><span class="line">    teacher.canDrive();</span><br><span class="line">  </span><br><span class="line">    Driver driver = <span class="keyword">new</span> Driver();</span><br><span class="line">    driver.canTeach();</span><br><span class="line">    driver.canDrive();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dart版本:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span> </span>&#123; </span><br><span class="line">  <span class="comment">// Some properties and methods...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teach</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> canTeach() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Yes, a human can teach."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Drive</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> canDrive() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Yes, a human can drive."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">Human</span> <span class="title">with</span> <span class="title">Teach</span>, <span class="title">Drive</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Driver</span> <span class="keyword">extends</span> <span class="title">Human</span> <span class="title">with</span> <span class="title">Teach</span>, <span class="title">Drive</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  </span><br><span class="line">  Teacher teacher = <span class="keyword">new</span> Teacher();</span><br><span class="line">  teacher.canTeach();</span><br><span class="line">  teacher.canDrive();</span><br><span class="line">  </span><br><span class="line">  Driver driver = <span class="keyword">new</span> Driver();</span><br><span class="line">  driver.canTeach();</span><br><span class="line">  driver.canDrive();</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>輸出均為:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Yes, a human can teach.</span><br><span class="line">Yes, a human can drive.</span><br><span class="line">Yes, a human can teach.</span><br><span class="line">Yes, a human can drive.</span><br></pre></td></tr></table></figure><p>這裡可以看到在Java版本的兩個職業中，實現方法(技能)出現重複的程式碼</p><p>而這裡Dart版本中的Mixin類自帶方法實現，從而解決了這個問題</p><p>(不過Java 8以上的default method也有同樣的效果)</p><h2 id="使Mixin類無法實例化"><a href="#使Mixin類無法實例化" class="headerlink" title="使Mixin類無法實例化"></a>使Mixin類無法實例化</h2><p>這裡可以使用關鍵字mixin</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mixin Teach &#123;</span><br><span class="line">  <span class="comment">// 這裡就是一個標準的Mixin類，無法實例化</span></span><br><span class="line">  <span class="keyword">void</span> canTeach() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Yes, a human can teach."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者是改為abstract class</p><p>並修改其private constructor(dash代表私有)的回傳值為null</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Drive</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 這樣一來Drive既不能擴充也不能實例化了</span></span><br><span class="line">  <span class="keyword">factory</span> Drive._() =&gt; <span class="keyword">null</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">void</span> canDrive() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Yes, a human can drive."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="mixin-on"><a href="#mixin-on" class="headerlink" title="mixin on"></a>mixin on</h2><p>現在我們修改一下設定</p><p>假設說只有會教書的人能使用Teach這個技能呢?</p><p>這時我們可以用到mixin on這個關鍵字</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Some properties and methods...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WhoCanTeach</span> <span class="keyword">extends</span> <span class="title">Human</span> </span>&#123;  </span><br><span class="line">  <span class="comment">// 會教書的人</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mixin Teach on WhoCanTeach &#123;</span><br><span class="line">  <span class="comment">// 這裡就指定了只有extends WhoCanTeach或implements WhoCanTeach的類才能with Teach</span></span><br><span class="line">  <span class="keyword">void</span> canTeach() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Yes, a human can teach."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Drive</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 這樣一來Drive既不能擴充也不能實例化了</span></span><br><span class="line">  <span class="keyword">factory</span> Drive._() =&gt; <span class="keyword">null</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">void</span> canDrive() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Yes, a human can drive."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">WhoCanTeach</span> <span class="title">with</span> <span class="title">Teach</span>, <span class="title">Drive</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Correct.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Driver</span> <span class="keyword">extends</span> <span class="title">Human</span> <span class="title">with</span> <span class="title">Teach</span>, <span class="title">Drive</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Error: Driver does not implement WhoCanTeach.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Driver</span> <span class="keyword">extends</span> <span class="title">Human</span> <span class="title">with</span> <span class="title">Drive</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Correct.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  </span><br><span class="line">  Teacher teacher = <span class="keyword">new</span> Teacher();</span><br><span class="line">  teacher.canTeach();</span><br><span class="line">  teacher.canDrive();</span><br><span class="line">  </span><br><span class="line">  Driver driver = <span class="keyword">new</span> Driver();</span><br><span class="line">  driver.canDrive();</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="線性化"><a href="#線性化" class="headerlink" title="線性化"></a>線性化</h2><p>看一下這個例子</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> getStatus() =&gt; <span class="string">"Full of energy!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> getStatus() =&gt; <span class="string">"I'm tired!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Engineer</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> getStatus() =&gt; <span class="string">"I'm dying..."</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Me</span> <span class="keyword">extends</span> <span class="title">Human</span> <span class="title">with</span> <span class="title">Student</span>, <span class="title">Engineer</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  </span><br><span class="line">  Me me = <span class="keyword">new</span> Me();</span><br><span class="line">  <span class="built_in">print</span>(me.getStatus());</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好的，這裡究竟會印出什麼東西來呢?</p><p>答案是 “I’m dying…” QAQ</p><p>先講結論: 越後面的Mixin類優先級別越高，等於是倒過來看啦~</p><h3 id="拆解"><a href="#拆解" class="headerlink" title="拆解"></a>拆解</h3><p>上面的東西相當於這樣</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> getStatus() =&gt; <span class="string">"Full of energy!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> getStatus() =&gt; <span class="string">"I'm tired!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Engineer</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> getStatus() =&gt; <span class="string">"I'm dying..."</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HumanWhoIsStudent</span> <span class="keyword">extends</span> <span class="title">Human</span> <span class="title">with</span> <span class="title">Student</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HumanWhoIsStudentAndEngineer</span> <span class="keyword">extends</span> <span class="title">HumanWhoIsStudent</span> <span class="title">with</span> <span class="title">Engineer</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Me</span> <span class="keyword">extends</span> <span class="title">HumanWhoIsStudentAndEngineer</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  </span><br><span class="line">  Me me = <span class="keyword">new</span> Me();</span><br><span class="line">  <span class="built_in">print</span>(me.getStatus());</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>簡單來說，Mixin像是在實現一條繼承鏈</p><h3 id="實例化後的類型"><a href="#實例化後的類型" class="headerlink" title="實例化後的類型"></a>實例化後的類型</h3><p>一樣是上面的例子</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  </span><br><span class="line">  Me me = <span class="keyword">new</span> Me();</span><br><span class="line">  <span class="built_in">print</span>(me <span class="keyword">is</span> Me);</span><br><span class="line">  <span class="built_in">print</span>(me <span class="keyword">is</span> Engineer);</span><br><span class="line">  <span class="built_in">print</span>(me <span class="keyword">is</span> Student);</span><br><span class="line">  <span class="built_in">print</span>(me <span class="keyword">is</span> Human);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>輸出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">true</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">true</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;這篇本來要跟&lt;a href=&quot;https://wst24365888.github.io/dart-extends-and-implements/&quot;&gt;上一篇&lt;/a&gt;一起寫&lt;/p&gt;
&lt;p&gt;直到我發現Dart中Mixin的觀念其實多到可以自成一篇QQ&lt;/p&gt;
&lt;h2 id=&quot;觀
      
    
    </summary>
    
      <category term="Dart" scheme="http://wst24365888.github.io/categories/Dart/"/>
    
    
      <category term="Dart" scheme="http://wst24365888.github.io/tags/Dart/"/>
    
      <category term="Extends" scheme="http://wst24365888.github.io/tags/Extends/"/>
    
      <category term="Abstract" scheme="http://wst24365888.github.io/tags/Abstract/"/>
    
      <category term="Mixin" scheme="http://wst24365888.github.io/tags/Mixin/"/>
    
      <category term="With" scheme="http://wst24365888.github.io/tags/With/"/>
    
  </entry>
  
  <entry>
    <title>淺談Dart中的Extends與Implements</title>
    <link href="http://wst24365888.github.io/dart-extends-and-implements/"/>
    <id>http://wst24365888.github.io/dart-extends-and-implements/</id>
    <published>2019-08-11T10:02:16.000Z</published>
    <updated>2019-08-11T13:35:51.098Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Extends"><a href="#Extends" class="headerlink" title="Extends"></a>Extends</h2><p>簡單來說就是繼承一個類別~</p><p>在Dart中，extends後面只能放一個類別</p><p>看個例子</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Vehicle</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 宣告屬性brand</span></span><br><span class="line">  <span class="built_in">String</span> brand;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 定義方法makeSomeNoise()</span></span><br><span class="line">  <span class="keyword">void</span> makeSomeNoise();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span> <span class="keyword">extends</span> <span class="title">Vehicle</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 繼承了尚未初始化的brand和尚未實作的方法makeSomeNoise()</span></span><br><span class="line">  <span class="comment">// 方法必須先實作，屬性則不一定要動(不過我習慣會上個空字串"")</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> makeSomeNoise() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"WOOOOO"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SportsCar</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 繼承了尚未初始化的brand和已實作的方法makeSomeNoise()</span></span><br><span class="line">  <span class="comment">// 初始化brand</span></span><br><span class="line">  <span class="built_in">String</span> brand = <span class="string">"Benzzz"</span>;</span><br><span class="line">  <span class="comment">// 當然這邊也可以覆寫makeSomeNoise()</span></span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  </span><br><span class="line">  SportsCar myBenzzz = <span class="keyword">new</span> SportsCar();</span><br><span class="line">  <span class="built_in">print</span>(myBenzzz.brand);</span><br><span class="line">  myBenzzz.makeSomeNoise();</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Implements"><a href="#Implements" class="headerlink" title="Implements"></a>Implements</h2><p>功能類似extends</p><p>不過如果今天換作implements的話</p><p>方法要全部重新實作!!!</p><p>方法要全部重新實作!!!</p><p>方法要全部重新實作!!!</p><p>很重要說三遍</p><p>在Dart中，implements後面能加上多個類別</p><p>修改一下上面的例子</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Horn</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> honk() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"BAAAAA"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SportsCar</span> <span class="keyword">implements</span> <span class="title">Car</span>, <span class="title">Horn</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 繼承了尚未初始化的brand和已實作的方法makeSomeNoise(), honk()</span></span><br><span class="line">  <span class="built_in">String</span> brand = <span class="string">"Benzzz"</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 要重新實作所有方法</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> makeSomeNoise() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"YEEEEEEEEE"</span>);</span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> honk() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"BALABALABA"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Extends&quot;&gt;&lt;a href=&quot;#Extends&quot; class=&quot;headerlink&quot; title=&quot;Extends&quot;&gt;&lt;/a&gt;Extends&lt;/h2&gt;&lt;p&gt;簡單來說就是繼承一個類別~&lt;/p&gt;
&lt;p&gt;在Dart中，extends後面只能放一個類別&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="Dart" scheme="http://wst24365888.github.io/categories/Dart/"/>
    
    
      <category term="Dart" scheme="http://wst24365888.github.io/tags/Dart/"/>
    
      <category term="Extends" scheme="http://wst24365888.github.io/tags/Extends/"/>
    
      <category term="Implements" scheme="http://wst24365888.github.io/tags/Implements/"/>
    
      <category term="Abstract" scheme="http://wst24365888.github.io/tags/Abstract/"/>
    
  </entry>
  
  <entry>
    <title>隱私權條款</title>
    <link href="http://wst24365888.github.io/privacy/"/>
    <id>http://wst24365888.github.io/privacy/</id>
    <published>2019-07-24T11:38:55.000Z</published>
    <updated>2019-07-24T11:52:57.868Z</updated>
    
    <content type="html"><![CDATA[<p>非常歡迎您使用本應用，為了讓您能夠安心的使用各項服務與資訊，特此向您說明我們的隱私權保護政策，以保障您的權益，請您詳閱下列內容：</p><h2 id="隱私權保護政策的適用範圍"><a href="#隱私權保護政策的適用範圍" class="headerlink" title="隱私權保護政策的適用範圍"></a>隱私權保護政策的適用範圍</h2><p>隱私權保護政策內容，包括本應用如何處理在您使用服務時收集到的個人識別資料。</p><p>隱私權保護政策不適用於本應用以外的相關連結應用，也不適用於非本應用所委託或參與管理的人員。</p><h2 id="個人資料的蒐集、處理及利用方式"><a href="#個人資料的蒐集、處理及利用方式" class="headerlink" title="個人資料的蒐集、處理及利用方式"></a>個人資料的蒐集、處理及利用方式</h2><p>當您使用本應用所提供之功能服務時，我們將視該服務功能性質，請您提供必要的個人資料，並在該特定目的範圍內處理及利用您的個人資料。</p><p>非經您書面同意，我們不會將個人資料用於其他用途。</p><p>本應用在您使用服務信箱、問卷調查等互動性功能時，會保留您所提供的姓名、電子郵件地址、聯絡方式及使用時間等。</p><p>於一般瀏覽時，伺服器會自行記錄相關行徑，包括您使用連線設備的IP位址、使用時間、使用的瀏覽器、瀏覽及點選資料記錄等，做為我們增進應用服務的參考依據，此記錄為內部應用，絕不對外公佈。</p><p>為提供精確的服務，我們會將收集的問卷調查內容進行統計與分析，分析結果之統計數據或說明文字呈現，除供內部研究外，我們會視需要公佈統計數據及說明文字，但不涉及特定個人之資料。</p><h2 id="資料之保護"><a href="#資料之保護" class="headerlink" title="資料之保護"></a>資料之保護</h2><p>我們的主機均設有防火牆、防毒系統等相關的各項資訊安全設備及必要的安全防護措施，藉此加以保護您個人資料。</p><p>只有經過授權的人員才能接觸您的個人資料，相關處理人員皆簽有保密合約，如有違反保密義務者，將會受到相關的法律處分。</p><p>如因業務需要有必要委託其他單位提供服務時，我們亦會嚴格要求其遵守保密義務，並且採取必要檢查程序以確定其將確實遵守。</p><h2 id="應用對外的相關連結"><a href="#應用對外的相關連結" class="headerlink" title="應用對外的相關連結"></a>應用對外的相關連結</h2><p>本應用的網頁提供其他應用的網路連結，您也可經由本應用所提供的連結，點選進入其他應用。</p><p>但該連結應用不適用我們的隱私權保護政策，您必須參考該連結應用中的隱私權保護政策。</p><h2 id="與第三人共用個人資料之政策"><a href="#與第三人共用個人資料之政策" class="headerlink" title="與第三人共用個人資料之政策"></a>與第三人共用個人資料之政策</h2><p>本應用絕不會提供、交換、出租或出售任何您的個人資料給其他個人、團體、私人企業或公務機關，但有法律依據或合約義務者，不在此限。</p><p>前項但書之情形包括不限於：</p><ul><li><p>經由您書面同意。</p></li><li><p>法律明文規定。</p></li><li><p>為免除您生命、身體、自由或財產上之危險。</p></li><li><p>與公務機關或學術研究機構合作，基於公共利益為統計或學術研究而有必要，且資料經過提供者處理或蒐集者依其揭露方式無從識別特定之當事人。</p></li><li><p>當您在應用的行為，違反服務條款或可能損害或妨礙應用與其他使用者權益或導致任何人遭受損害時，經應用管理單位研析揭露您的個人資料是為了辨識、聯絡或採取法律行動所必要者。</p></li><li><p>有利於您的權益。</p></li><li><p>本應用委託廠商協助蒐集、處理或利用您的個人資料時，將對委外廠商或個人善盡監督管理之責。</p></li></ul><h2 id="Cookie之使用"><a href="#Cookie之使用" class="headerlink" title="Cookie之使用"></a>Cookie之使用</h2><p>為了提供您最佳的服務，本應用會在您的電腦中放置並取用我們的Cookie。</p><p>若您不願接受Cookie的寫入，您可在您使用的瀏覽器功能項中設定隱私權等級為高，即可拒絕Cookie的寫入，但可能會導至本應用某些功能無法正常執行 。</p><h2 id="隱私權保護政策之修正"><a href="#隱私權保護政策之修正" class="headerlink" title="隱私權保護政策之修正"></a>隱私權保護政策之修正</h2><p>本應用隱私權保護政策將因應需求隨時進行修正，修正後的條款將立即刊登。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;非常歡迎您使用本應用，為了讓您能夠安心的使用各項服務與資訊，特此向您說明我們的隱私權保護政策，以保障您的權益，請您詳閱下列內容：&lt;/p&gt;
&lt;h2 id=&quot;隱私權保護政策的適用範圍&quot;&gt;&lt;a href=&quot;#隱私權保護政策的適用範圍&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="Privacy" scheme="http://wst24365888.github.io/categories/Privacy/"/>
    
    
      <category term="Privacy" scheme="http://wst24365888.github.io/tags/Privacy/"/>
    
  </entry>
  
  <entry>
    <title>Xoops App Releases</title>
    <link href="http://wst24365888.github.io/xoops-app/"/>
    <id>http://wst24365888.github.io/xoops-app/</id>
    <published>2019-07-23T12:29:10.000Z</published>
    <updated>2019-08-06T04:30:44.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最新版本"><a href="#最新版本" class="headerlink" title="最新版本"></a>最新版本</h2><ul><li><p><a href="xoops-app-latest-version.apk">直接下載最新版本 v1.1.2</a> (2019/08/06 釋出)</p></li><li><p>從<a href="https://play.google.com/store/apps/details?id=com.xyphuz.xoops_app" target="_blank" rel="noopener">Play商店</a>安裝(因為須審核，所以版本更新上可能較慢)</p></li></ul><h2 id="使用說明"><a href="#使用說明" class="headerlink" title="使用說明"></a>使用說明</h2><p>下載完apk並安裝好後</p><p>打開「XOOPS網站」會進入設定頁面，如下</p><p><img src="4.png" alt></p><p>按下「掃描QR Code以進行設定」</p><p><img src="1.png" alt></p><p>並對準需要設定的網站中QR Code的區塊</p><p>(注意！這裡要安裝Tad Tools 3.2.8以上的網站才可能有此區塊)</p><p><img src="072.png" alt></p><p>如果出現下列任一種情況</p><ul><li>頁面跳轉</li></ul><p><img src="3.png" alt></p><ul><li>「網站名稱」和「Domain」都不是”unknown”</li></ul><p><img src="2.png" alt></p><p>就代表設定完成了~</p><h2 id="歷史版本"><a href="#歷史版本" class="headerlink" title="歷史版本"></a>歷史版本</h2><h3 id="v1-0-0-2019-07-23-釋出"><a href="#v1-0-0-2019-07-23-釋出" class="headerlink" title="v1.0.0 (2019/07/23 釋出)"></a>v1.0.0 (2019/07/23 釋出)</h3><ul><li><p>新增 - 支援tadnews</p></li><li><p>新增 - 支援tadgallery</p></li></ul><p><a href="xoops-app-version-1.0.0.apk">前往下載v1.0.0</a></p><h3 id="v1-1-2-2019-08-06-釋出"><a href="#v1-1-2-2019-08-06-釋出" class="headerlink" title="v1.1.2 (2019/08/06 釋出)"></a>v1.1.2 (2019/08/06 釋出)</h3><ul><li><p>新稱 - 支援tad_player</p></li><li><p>修復 - 掃描QR code時在某些情況下會當機的問題</p></li><li><p>修復 - tadnews中分類名稱過長導致overflow的問題</p></li><li><p>變更 - 返回鍵的功能改為回到上層或上一頁</p></li></ul><p><a href="xoops-app-version-1.1.2.apk">前往下載v1.1.2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;最新版本&quot;&gt;&lt;a href=&quot;#最新版本&quot; class=&quot;headerlink&quot; title=&quot;最新版本&quot;&gt;&lt;/a&gt;最新版本&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;xoops-app-latest-version.apk&quot;&gt;直接下載最新版本 v1.1.
      
    
    </summary>
    
      <category term="Release" scheme="http://wst24365888.github.io/categories/Release/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="Xoops" scheme="http://wst24365888.github.io/tags/Xoops/"/>
    
      <category term="App" scheme="http://wst24365888.github.io/tags/App/"/>
    
      <category term="Release" scheme="http://wst24365888.github.io/tags/Release/"/>
    
  </entry>
  
  <entry>
    <title>解決Flutter中Row與Column之Overflow的問題</title>
    <link href="http://wst24365888.github.io/flutter-row-column-overflow/"/>
    <id>http://wst24365888.github.io/flutter-row-column-overflow/</id>
    <published>2019-07-17T06:46:52.000Z</published>
    <updated>2019-07-17T07:10:56.934Z</updated>
    
    <content type="html"><![CDATA[<h2 id="防止Row中的東西Overflow"><a href="#防止Row中的東西Overflow" class="headerlink" title="防止Row中的東西Overflow"></a>防止Row中的東西Overflow</h2><p>這裡使用Expanded或Flexible都可以</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">child: Row(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    Expanded(</span><br><span class="line">      child: Text(...),</span><br><span class="line">    )</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h2 id="防止Column中的東西Overflow"><a href="#防止Column中的東西Overflow" class="headerlink" title="防止Column中的東西Overflow"></a>防止Column中的東西Overflow</h2><p>這裡使用SingleChildScrollView</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">child: SingleChildScrollView(</span><br><span class="line">  child: Column(</span><br><span class="line">    children: &lt;Widget&gt;[</span><br><span class="line">      YourWidget(),</span><br><span class="line">      YourWidget(),</span><br><span class="line">      YourWidget(),</span><br><span class="line">    ],</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;防止Row中的東西Overflow&quot;&gt;&lt;a href=&quot;#防止Row中的東西Overflow&quot; class=&quot;headerlink&quot; title=&quot;防止Row中的東西Overflow&quot;&gt;&lt;/a&gt;防止Row中的東西Overflow&lt;/h2&gt;&lt;p&gt;這裡使用Expand
      
    
    </summary>
    
      <category term="Flutter" scheme="http://wst24365888.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="Overflow" scheme="http://wst24365888.github.io/tags/Overflow/"/>
    
      <category term="Row" scheme="http://wst24365888.github.io/tags/Row/"/>
    
      <category term="Expanded" scheme="http://wst24365888.github.io/tags/Expanded/"/>
    
      <category term="Flexible" scheme="http://wst24365888.github.io/tags/Flexible/"/>
    
      <category term="Column" scheme="http://wst24365888.github.io/tags/Column/"/>
    
      <category term="SingleChildScrollView" scheme="http://wst24365888.github.io/tags/SingleChildScrollView/"/>
    
  </entry>
  
  <entry>
    <title>將Flutter App設置為全屏</title>
    <link href="http://wst24365888.github.io/flutter-full-screen/"/>
    <id>http://wst24365888.github.io/flutter-full-screen/</id>
    <published>2019-07-17T04:34:15.000Z</published>
    <updated>2019-07-17T04:35:45.300Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用SystemChrome"><a href="#用SystemChrome" class="headerlink" title="用SystemChrome"></a>用SystemChrome</h2><h3 id="引入services-dart"><a href="#引入services-dart" class="headerlink" title="引入services.dart"></a>引入services.dart</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/services.dart'</span>;</span><br></pre></td></tr></table></figure><h3 id="修改整個app"><a href="#修改整個app" class="headerlink" title="修改整個app"></a>修改整個app</h3><p>在main()函數中加入</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line"></span><br><span class="line">  SystemChrome.setEnabledSystemUIOverlays([]);</span><br><span class="line"></span><br><span class="line">  runApp(...);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;用SystemChrome&quot;&gt;&lt;a href=&quot;#用SystemChrome&quot; class=&quot;headerlink&quot; title=&quot;用SystemChrome&quot;&gt;&lt;/a&gt;用SystemChrome&lt;/h2&gt;&lt;h3 id=&quot;引入services-dart&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="Flutter" scheme="http://wst24365888.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="SystemChrome" scheme="http://wst24365888.github.io/tags/SystemChrome/"/>
    
  </entry>
  
  <entry>
    <title>在Flutter中固定方向</title>
    <link href="http://wst24365888.github.io/flutter-orientation/"/>
    <id>http://wst24365888.github.io/flutter-orientation/</id>
    <published>2019-07-17T04:21:01.000Z</published>
    <updated>2019-07-17T04:29:45.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用SystemChrome"><a href="#用SystemChrome" class="headerlink" title="用SystemChrome"></a>用SystemChrome</h2><h3 id="引入services-dart"><a href="#引入services-dart" class="headerlink" title="引入services.dart"></a>引入services.dart</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/services.dart'</span>;</span><br></pre></td></tr></table></figure><h3 id="修改整個app"><a href="#修改整個app" class="headerlink" title="修改整個app"></a>修改整個app</h3><p>在main()函數中加入</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line"></span><br><span class="line">  SystemChrome.setPreferredOrientations([</span><br><span class="line">    <span class="comment">//你要的方向</span></span><br><span class="line">    DeviceOrientation.portraitUp,</span><br><span class="line">    DeviceOrientation.portraitDown,</span><br><span class="line">  ]);</span><br><span class="line"></span><br><span class="line">  runApp(...);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改單一頁面"><a href="#修改單一頁面" class="headerlink" title="修改單一頁面"></a>修改單一頁面</h3><p>在該頁面的initState()函數中加入</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> initState() &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">super</span>.initState();</span><br><span class="line"></span><br><span class="line">  SystemChrome.setPreferredOrientations([</span><br><span class="line">    <span class="comment">//你要的方向</span></span><br><span class="line">    DeviceOrientation.landscapeRight,</span><br><span class="line">    DeviceOrientation.landscapeLeft,</span><br><span class="line">  ]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在該頁面的dispose()函數中加入</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> dispose() &#123;</span><br><span class="line"></span><br><span class="line">  SystemChrome.setPreferredOrientations([</span><br><span class="line">    <span class="comment">//代表遺棄時方向改為直立</span></span><br><span class="line">    DeviceOrientation.portraitUp,</span><br><span class="line">    DeviceOrientation.portraitDown,</span><br><span class="line">  ]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">super</span>.dispose();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;用SystemChrome&quot;&gt;&lt;a href=&quot;#用SystemChrome&quot; class=&quot;headerlink&quot; title=&quot;用SystemChrome&quot;&gt;&lt;/a&gt;用SystemChrome&lt;/h2&gt;&lt;h3 id=&quot;引入services-dart&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="Flutter" scheme="http://wst24365888.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="SystemChrome" scheme="http://wst24365888.github.io/tags/SystemChrome/"/>
    
      <category term="Orientation" scheme="http://wst24365888.github.io/tags/Orientation/"/>
    
  </entry>
  
  <entry>
    <title>解決Flutter中Target of URI doesn&#39;t exist的問題</title>
    <link href="http://wst24365888.github.io/flutter-target-of-uri-does-not-exist/"/>
    <id>http://wst24365888.github.io/flutter-target-of-uri-does-not-exist/</id>
    <published>2019-07-16T02:53:26.000Z</published>
    <updated>2019-07-16T03:03:10.896Z</updated>
    
    <content type="html"><![CDATA[<p>才剛換個環境</p><p>結果就跑出令人頭痛的問題</p><p>所有引入的packages全部找不到，如圖</p><p><img src="070.png" alt></p><h2 id="用Flutter-Pub-Get"><a href="#用Flutter-Pub-Get" class="headerlink" title="用Flutter Pub Get"></a>用Flutter Pub Get</h2><p>輸入以下指令，再重開VS Code就解決啦~</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ flutter pub get</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;才剛換個環境&lt;/p&gt;
&lt;p&gt;結果就跑出令人頭痛的問題&lt;/p&gt;
&lt;p&gt;所有引入的packages全部找不到，如圖&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;070.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;用Flutter-Pub-Get&quot;&gt;&lt;a href=&quot;#用Flutter-P
      
    
    </summary>
    
      <category term="Flutter" scheme="http://wst24365888.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="Packages" scheme="http://wst24365888.github.io/tags/Packages/"/>
    
      <category term="Pub" scheme="http://wst24365888.github.io/tags/Pub/"/>
    
  </entry>
  
  <entry>
    <title>安裝Flutter</title>
    <link href="http://wst24365888.github.io/install-flutter/"/>
    <id>http://wst24365888.github.io/install-flutter/</id>
    <published>2019-07-15T01:56:05.000Z</published>
    <updated>2019-07-15T08:10:00.639Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下載Flutter-SDK"><a href="#下載Flutter-SDK" class="headerlink" title="下載Flutter SDK"></a>下載Flutter SDK</h2><p>到<a href="https://flutter.dev/docs/get-started/install" target="_blank" rel="noopener">Flutter官網</a>選擇你的平台</p><p>並開始下載Flutter SDK</p><p><img src="052.png" alt></p><p>下載好了之後解壓到你要安裝的資料夾</p><h3 id="Dart-SDK"><a href="#Dart-SDK" class="headerlink" title="Dart SDK"></a>Dart SDK</h3><p>Flutter是基於Dart語言開發的</p><p>所以理論上我們需要Dart SDK</p><p>不過好消息是Dart SDK已經綁在Flutter SDK裡了，所以無需單獨下載</p><h3 id="配置環境變數"><a href="#配置環境變數" class="headerlink" title="配置環境變數"></a>配置環境變數</h3><p>這裡新增的路徑一律都指向bin資料夾</p><p><img src="055.png" alt></p><p><img src="058.png" alt></p><h3 id="Flutter-Doctor"><a href="#Flutter-Doctor" class="headerlink" title="Flutter Doctor"></a>Flutter Doctor</h3><p>配置環境變數之後隨時可以用這個指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ flutter doctor</span><br></pre></td></tr></table></figure><p>查看是否有那裡沒安裝好或是出問題</p><h2 id="安裝JDK"><a href="#安裝JDK" class="headerlink" title="安裝JDK"></a>安裝JDK</h2><p>到<a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">甲骨文官網</a>下載你要的JDK版本</p><p>下載了之後照著他的指示安裝就可以了</p><h3 id="配置環境變數-1"><a href="#配置環境變數-1" class="headerlink" title="配置環境變數"></a>配置環境變數</h3><p><img src="057.png" alt></p><h2 id="安裝Android-Studio"><a href="#安裝Android-Studio" class="headerlink" title="安裝Android Studio"></a>安裝Android Studio</h2><p>到<a href="https://developer.android.com/studio" target="_blank" rel="noopener">Android Studio官網</a>下載Android Studio</p><p>之後照著指示安裝</p><h3 id="Android-SDK"><a href="#Android-SDK" class="headerlink" title="Android SDK"></a>Android SDK</h3><p>在新版的Android Studio安裝過程中</p><p>會提示你要不要裝哦</p><p>記得打勾就好(不過我記得預設就是打勾啦)</p><h3 id="安裝Android-Licenses"><a href="#安裝Android-Licenses" class="headerlink" title="安裝Android Licenses"></a>安裝Android Licenses</h3><p>輸入以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ flutter doctor --android-licenses</span><br></pre></td></tr></table></figure><p>就結束啦~</p><h3 id="創建模擬器"><a href="#創建模擬器" class="headerlink" title="創建模擬器"></a>創建模擬器</h3><p>這裡要來創建一個AVD虛擬機</p><p>也就是在測試時看到的手機畫面</p><p>先到這個畫面，找到Configure點下去</p><p><img src="060.png" alt></p><p>選AVD Manager</p><p><img src="061.png" alt></p><p>接下來就照著提示創建一台虛擬機吧！</p><p><img src="062.png" alt></p><p>到了按Finish之後才是真正完成哦~</p><p><img src="063.png" alt></p><p>按下Launch可以啟動測試看看是否正常運行</p><p><img src="065.png" alt></p><p><img src="064.png" alt></p><h3 id="安裝語言外掛"><a href="#安裝語言外掛" class="headerlink" title="安裝語言外掛"></a>安裝語言外掛</h3><p>先到這個畫面，找到Configure點下去</p><p><img src="060.png" alt></p><p>這次換成Plugins</p><p><img src="061.png" alt></p><p>搜尋Flutter(記得要大寫)，然後點安裝</p><p><img src="066.png" alt></p><p>這步他會提示你要連同Dart的外掛一起裝，這裡一直按是就好了</p><p>裝好之後重開會如圖，這樣就完成啦~</p><p><img src="067.png" alt></p><h2 id="編輯器"><a href="#編輯器" class="headerlink" title="編輯器"></a>編輯器</h2><p>這裡可以選擇你要用VS Code編輯，還是Android Studio編輯就好</p><p>這裡我是用VS Code</p><p>所以來安裝個也來安裝個語言外掛</p><p>如圖，Install給他按下去，94簡單</p><p><img src="068.png" alt></p><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><p>一樣輸入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ flutter doctor --android-licenses</span><br></pre></td></tr></table></figure><p>如果只剩這個問題的話，代表你成功啦！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[!] Connected device</span><br><span class="line">    ! No devices available</span><br></pre></td></tr></table></figure><p>只要用USB線插上你的設備(手機端記得開偵錯)</p><p>或者是用剛剛建立的AVD虛擬機就可以解決這個問題了~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下載Flutter-SDK&quot;&gt;&lt;a href=&quot;#下載Flutter-SDK&quot; class=&quot;headerlink&quot; title=&quot;下載Flutter SDK&quot;&gt;&lt;/a&gt;下載Flutter SDK&lt;/h2&gt;&lt;p&gt;到&lt;a href=&quot;https://flutter.
      
    
    </summary>
    
      <category term="Flutter" scheme="http://wst24365888.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="Install" scheme="http://wst24365888.github.io/tags/Install/"/>
    
  </entry>
  
  <entry>
    <title>Flutter中隱藏某視窗</title>
    <link href="http://wst24365888.github.io/flutter-hide-widget/"/>
    <id>http://wst24365888.github.io/flutter-hide-widget/</id>
    <published>2019-07-03T10:39:57.000Z</published>
    <updated>2019-07-03T10:44:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用Visibility包軌"><a href="#用Visibility包軌" class="headerlink" title="用Visibility包軌"></a>用Visibility包軌</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Visibility( </span><br><span class="line">  visible: _isVisible,</span><br><span class="line">  child: YourWidget(),</span><br><span class="line">),</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;用Visibility包軌&quot;&gt;&lt;a href=&quot;#用Visibility包軌&quot; class=&quot;headerlink&quot; title=&quot;用Visibility包軌&quot;&gt;&lt;/a&gt;用Visibility包軌&lt;/h2&gt;&lt;figure class=&quot;highlight dart
      
    
    </summary>
    
      <category term="Flutter" scheme="http://wst24365888.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="Visibility" scheme="http://wst24365888.github.io/tags/Visibility/"/>
    
      <category term="Hide" scheme="http://wst24365888.github.io/tags/Hide/"/>
    
      <category term="Widget" scheme="http://wst24365888.github.io/tags/Widget/"/>
    
  </entry>
  
  <entry>
    <title>解決Flutter中SingleChildScrollView在Column底下無法運作的問題</title>
    <link href="http://wst24365888.github.io/flutter-singlechildscrollview-in-column/"/>
    <id>http://wst24365888.github.io/flutter-singlechildscrollview-in-column/</id>
    <published>2019-07-03T09:53:23.000Z</published>
    <updated>2019-07-17T06:44:38.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用Expanded包住SingleChildScrollView"><a href="#用Expanded包住SingleChildScrollView" class="headerlink" title="用Expanded包住SingleChildScrollView"></a>用Expanded包住SingleChildScrollView</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Column(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    Expanded(</span><br><span class="line">      child: SingleChildScrollView(),</span><br><span class="line">    )</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;用Expanded包住SingleChildScrollView&quot;&gt;&lt;a href=&quot;#用Expanded包住SingleChildScrollView&quot; class=&quot;headerlink&quot; title=&quot;用Expanded包住SingleChildScroll
      
    
    </summary>
    
      <category term="Flutter" scheme="http://wst24365888.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="Expanded" scheme="http://wst24365888.github.io/tags/Expanded/"/>
    
      <category term="Column" scheme="http://wst24365888.github.io/tags/Column/"/>
    
      <category term="SingleChildScrollView" scheme="http://wst24365888.github.io/tags/SingleChildScrollView/"/>
    
  </entry>
  
  <entry>
    <title>在Flutter中換頁</title>
    <link href="http://wst24365888.github.io/flutter-change-page/"/>
    <id>http://wst24365888.github.io/flutter-change-page/</id>
    <published>2019-07-03T08:37:56.000Z</published>
    <updated>2019-07-03T08:57:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用Navigator-push"><a href="#使用Navigator-push" class="headerlink" title="使用Navigator.push"></a>使用Navigator.push</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Navigator.push(</span><br><span class="line">    context,</span><br><span class="line">    MaterialPageRoute(builder: (context) =&gt; ThePageYouWantToGo()),</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用Navigator-push&quot;&gt;&lt;a href=&quot;#使用Navigator-push&quot; class=&quot;headerlink&quot; title=&quot;使用Navigator.push&quot;&gt;&lt;/a&gt;使用Navigator.push&lt;/h2&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="Flutter" scheme="http://wst24365888.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="Navigator" scheme="http://wst24365888.github.io/tags/Navigator/"/>
    
  </entry>
  
  <entry>
    <title>Flutter中配置BottomNavigationBar的顏色</title>
    <link href="http://wst24365888.github.io/flutter-bottomnavigationbar-color/"/>
    <id>http://wst24365888.github.io/flutter-bottomnavigationbar-color/</id>
    <published>2019-07-03T08:26:38.000Z</published>
    <updated>2019-07-03T08:32:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用Theme"><a href="#使用Theme" class="headerlink" title="使用Theme"></a>使用Theme</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Theme(</span><br><span class="line">  data: Theme.of(context).copyWith(</span><br><span class="line">    <span class="comment">// background color</span></span><br><span class="line">    canvasColor: Colors.black</span><br><span class="line">  )),</span><br><span class="line">  child: BottomNavigationBar(),</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用Theme&quot;&gt;&lt;a href=&quot;#使用Theme&quot; class=&quot;headerlink&quot; title=&quot;使用Theme&quot;&gt;&lt;/a&gt;使用Theme&lt;/h2&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="Flutter" scheme="http://wst24365888.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="BottomNavigationBar" scheme="http://wst24365888.github.io/tags/BottomNavigationBar/"/>
    
      <category term="Color" scheme="http://wst24365888.github.io/tags/Color/"/>
    
  </entry>
  
  <entry>
    <title>Flutter中使Widget變為可點擊</title>
    <link href="http://wst24365888.github.io/flutter-make-widget-clickable/"/>
    <id>http://wst24365888.github.io/flutter-make-widget-clickable/</id>
    <published>2019-07-03T08:12:42.000Z</published>
    <updated>2019-07-03T10:43:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用GestureDetector包起來"><a href="#用GestureDetector包起來" class="headerlink" title="用GestureDetector包起來"></a>用GestureDetector包起來</h2><p>除此之外，GestureDetector還能偵測很多手勢哦</p><p>至於有什麼其他手勢大家就自己探索了~</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GestureDetector(</span><br><span class="line">  onTap: _yourAction,</span><br><span class="line">  child: YourWidget(),</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;用GestureDetector包起來&quot;&gt;&lt;a href=&quot;#用GestureDetector包起來&quot; class=&quot;headerlink&quot; title=&quot;用GestureDetector包起來&quot;&gt;&lt;/a&gt;用GestureDetector包起來&lt;/h2&gt;&lt;p&gt;除此
      
    
    </summary>
    
      <category term="Flutter" scheme="http://wst24365888.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wst24365888.github.io/tags/Flutter/"/>
    
      <category term="Widget" scheme="http://wst24365888.github.io/tags/Widget/"/>
    
      <category term="Card" scheme="http://wst24365888.github.io/tags/Card/"/>
    
      <category term="GestureDetector" scheme="http://wst24365888.github.io/tags/GestureDetector/"/>
    
  </entry>
  
  <entry>
    <title>Hexo &amp; RSS</title>
    <link href="http://wst24365888.github.io/hexo-rss/"/>
    <id>http://wst24365888.github.io/hexo-rss/</id>
    <published>2019-07-01T02:36:39.000Z</published>
    <updated>2019-07-01T02:43:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>7月了，好熱…</p><h2 id="安裝套件"><a href="#安裝套件" class="headerlink" title="安裝套件"></a>安裝套件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><h2 id="修改站點配置"><a href="#修改站點配置" class="headerlink" title="修改站點配置"></a>修改站點配置</h2><p>到部落格根目錄底下的_config.yml修改配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#RSS</span></span><br><span class="line"><span class="attr">plugin:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><h2 id="修改主題配置"><a href="#修改主題配置" class="headerlink" title="修改主題配置"></a>修改主題配置</h2><p>如果你使用的主題裡有RSS相關的設定，記得要配置一下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure><h2 id="發布"><a href="#發布" class="headerlink" title="發布"></a>發布</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;7月了，好熱…&lt;/p&gt;
&lt;h2 id=&quot;安裝套件&quot;&gt;&lt;a href=&quot;#安裝套件&quot; class=&quot;headerlink&quot; title=&quot;安裝套件&quot;&gt;&lt;/a&gt;安裝套件&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
      <category term="Hexo" scheme="http://wst24365888.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://wst24365888.github.io/tags/Hexo/"/>
    
      <category term="RSS" scheme="http://wst24365888.github.io/tags/RSS/"/>
    
  </entry>
  
  <entry>
    <title>將Hexo部屬到GitHub</title>
    <link href="http://wst24365888.github.io/hexo-github/"/>
    <id>http://wst24365888.github.io/hexo-github/</id>
    <published>2019-06-29T13:28:17.000Z</published>
    <updated>2019-07-01T03:00:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>打完標題才發現GitHub的H應該要是大寫XD</p><h2 id="創建新倉庫"><a href="#創建新倉庫" class="headerlink" title="創建新倉庫"></a>創建新倉庫</h2><p>登入你的Github，然後創建一個新的倉庫(New Repository)</p><p>倉庫名稱為: 你的Github用戶名.github.io</p><p>這是固定寫法!!!</p><h2 id="安裝Git"><a href="#安裝Git" class="headerlink" title="安裝Git"></a>安裝Git</h2><p>如果你還沒安裝Git，到<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">這裡</a>安裝</p><h2 id="綁定Github"><a href="#綁定Github" class="headerlink" title="綁定Github"></a>綁定Github</h2><p>輸入指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"你的Github用戶名"</span></span><br><span class="line">$ git config --global user.email <span class="string">"你註冊GitHub的電子信箱"</span></span><br></pre></td></tr></table></figure><h2 id="生成密鑰"><a href="#生成密鑰" class="headerlink" title="生成密鑰"></a>生成密鑰</h2><p>輸入指令，接下來都按Enter就好</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"你註冊GitHub的電子信箱"</span></span><br></pre></td></tr></table></figure><p>這裡會生成一個名為id_rsa.pub的SSH密鑰文件</p><p>主要使用非對稱加密來驗證你是否為合法用戶</p><p>不然大家都可以隨意上傳就天下大亂啦~</p><h2 id="到Github新建SSH-Key"><a href="#到Github新建SSH-Key" class="headerlink" title="到Github新建SSH Key"></a>到Github新建SSH Key</h2><h3 id="複製Key"><a href="#複製Key" class="headerlink" title="複製Key"></a>複製Key</h3><p>找到剛剛生成的id_rsa.pub(有點難找，通常在C:/Users/你的使用者名稱/.ssh底下)</p><p>把裡面的內容”全部”複製</p><h3 id="新建SSH-Key"><a href="#新建SSH-Key" class="headerlink" title="新建SSH Key"></a>新建SSH Key</h3><p>接著到<a href="https://github.com/settings/keys" target="_blank" rel="noopener">這裡</a>點New SSH Key</p><p>進入頁面之後(如圖)</p><p><img src="049.png" alt></p><p>Title隨便打</p><p>Key的欄位則貼上剛剛複製的東西</p><p>然後愉快的送出~</p><h3 id="檢查"><a href="#檢查" class="headerlink" title="檢查"></a>檢查</h3><p>輸入指令後，可以檢查GitHub那邊公鑰是否設置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh git@github.com</span><br></pre></td></tr></table></figure><h2 id="安裝Hexo的Git部屬套件"><a href="#安裝Hexo的Git部屬套件" class="headerlink" title="安裝Hexo的Git部屬套件"></a>安裝Hexo的Git部屬套件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>到部落格根目錄下的_config.yml文件，並修改為下述的樣子</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span> </span><br><span class="line"><span class="attr">    type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">    repo:</span> <span class="attr">https://github.com/你的Github用戶名/你的Github用戶名.github.io.git</span> <span class="comment">#簡單來說就是你的倉庫網址加.git</span></span><br><span class="line"><span class="attr">    branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h2 id="建立靜態檔案並發布"><a href="#建立靜態檔案並發布" class="headerlink" title="建立靜態檔案並發布"></a>建立靜態檔案並發布</h2><p>是的，最重要的發布XD</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><p>接著就能到 https://你的Github用戶名.github.io 看到你的成果啦~</p><p>至於更進一步想要綁定域名的話</p><p>我自己也還沒實作</p><p>之後如果有空的話會來做做看</p><p>或許也會寫一篇文章~</p><p>就請大家拭目以待了!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打完標題才發現GitHub的H應該要是大寫XD&lt;/p&gt;
&lt;h2 id=&quot;創建新倉庫&quot;&gt;&lt;a href=&quot;#創建新倉庫&quot; class=&quot;headerlink&quot; title=&quot;創建新倉庫&quot;&gt;&lt;/a&gt;創建新倉庫&lt;/h2&gt;&lt;p&gt;登入你的Github，然後創建一個新的倉庫(New R
      
    
    </summary>
    
      <category term="Hexo" scheme="http://wst24365888.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://wst24365888.github.io/tags/Hexo/"/>
    
      <category term="Git" scheme="http://wst24365888.github.io/tags/Git/"/>
    
      <category term="GitHub" scheme="http://wst24365888.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Hexo &amp; Google Analytics</title>
    <link href="http://wst24365888.github.io/add-google-analytics/"/>
    <id>http://wst24365888.github.io/add-google-analytics/</id>
    <published>2019-06-28T14:42:10.000Z</published>
    <updated>2019-06-29T13:15:53.690Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建立帳戶"><a href="#建立帳戶" class="headerlink" title="建立帳戶"></a>建立帳戶</h2><p>先登入Google帳戶，</p><p>再到<a href="https://analytics.google.com/analytics/web/provision/?authuser=0#/provision/create" target="_blank" rel="noopener">這裡</a>去幫這個網站建立一個帳戶(資源)，</p><p>並取得追蹤編號UA-xxxxxxxx-x</p><h2 id="設定編號"><a href="#設定編號" class="headerlink" title="設定編號"></a>設定編號</h2><p>到部落格”themes/你使用的主題”目錄底下的_config.yml修改google_analytics項目</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">google_analytics:</span> <span class="string">UA-xxxxxxxx-x</span></span><br></pre></td></tr></table></figure><h2 id="發佈"><a href="#發佈" class="headerlink" title="發佈"></a>發佈</h2><p>沒錯，還是發布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>就這樣結束啦~!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;建立帳戶&quot;&gt;&lt;a href=&quot;#建立帳戶&quot; class=&quot;headerlink&quot; title=&quot;建立帳戶&quot;&gt;&lt;/a&gt;建立帳戶&lt;/h2&gt;&lt;p&gt;先登入Google帳戶，&lt;/p&gt;
&lt;p&gt;再到&lt;a href=&quot;https://analytics.google.com/an
      
    
    </summary>
    
      <category term="Hexo" scheme="http://wst24365888.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://wst24365888.github.io/tags/Hexo/"/>
    
      <category term="Google" scheme="http://wst24365888.github.io/tags/Google/"/>
    
      <category term="Google Analytics" scheme="http://wst24365888.github.io/tags/Google-Analytics/"/>
    
      <category term="Analytics" scheme="http://wst24365888.github.io/tags/Analytics/"/>
    
  </entry>
  
  <entry>
    <title>Hexo建立網站地圖Sitemap</title>
    <link href="http://wst24365888.github.io/hexo-sitemap/"/>
    <id>http://wst24365888.github.io/hexo-sitemap/</id>
    <published>2019-06-28T14:26:13.000Z</published>
    <updated>2019-07-01T02:44:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建立Sitemap-xml"><a href="#建立Sitemap-xml" class="headerlink" title="建立Sitemap.xml"></a>建立Sitemap.xml</h2><h3 id="安裝套件"><a href="#安裝套件" class="headerlink" title="安裝套件"></a>安裝套件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-sitemap</span><br></pre></td></tr></table></figure><h3 id="加入-sitemap-路徑"><a href="#加入-sitemap-路徑" class="headerlink" title="加入 sitemap 路徑"></a>加入 sitemap 路徑</h3><p>到部落格根目錄底下的_config.yml中加入以下幾行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#Sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure><h3 id="發佈"><a href="#發佈" class="headerlink" title="發佈"></a>發佈</h3><p>對，一樣是發布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><h2 id="向Google-Search-Console提交"><a href="#向Google-Search-Console提交" class="headerlink" title="向Google Search Console提交"></a>向Google Search Console提交</h2><p>到<a href="https://search.google.com/search-console" target="_blank" rel="noopener">Google Search Console</a>中Sitemap的選項去提交網址就行了</p><p><img src="048.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;建立Sitemap-xml&quot;&gt;&lt;a href=&quot;#建立Sitemap-xml&quot; class=&quot;headerlink&quot; title=&quot;建立Sitemap.xml&quot;&gt;&lt;/a&gt;建立Sitemap.xml&lt;/h2&gt;&lt;h3 id=&quot;安裝套件&quot;&gt;&lt;a href=&quot;#安裝套件&quot;
      
    
    </summary>
    
      <category term="Hexo" scheme="http://wst24365888.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://wst24365888.github.io/tags/Hexo/"/>
    
      <category term="Google Search Console" scheme="http://wst24365888.github.io/tags/Google-Search-Console/"/>
    
      <category term="Sitemap" scheme="http://wst24365888.github.io/tags/Sitemap/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Tags 換大小寫</title>
    <link href="http://wst24365888.github.io/hexo-tags/"/>
    <id>http://wst24365888.github.io/hexo-tags/</id>
    <published>2019-06-28T14:11:23.000Z</published>
    <updated>2019-06-29T14:01:19.260Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WTF"><a href="#WTF" class="headerlink" title="WTF?"></a>WTF?</h2><p>如果你也像我一樣白目想換tags中的大小寫</p><p>例如: hexo -&gt; Hexo</p><p>會發現，疑?</p><p>怎麼tags/Hexo沒作用了?</p><h2 id="How-to-solve"><a href="#How-to-solve" class="headerlink" title="How to solve?"></a>How to solve?</h2><h3 id="已成功"><a href="#已成功" class="headerlink" title="已成功"></a>已成功</h3><ol><li>首先把所有文章的tags註解起來</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#tags: [Hexo, Tags]</span></span><br></pre></td></tr></table></figure><ol start="2"><li>刪除靜態檔案，然後重新建立靜態檔案並發布</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><ol start="3"><li>再來把所有文章的tags註解去掉</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: [Hexo, Tags]</span><br></pre></td></tr></table></figure><ol start="4"><li>最後建立靜態檔案並發布</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><h3 id="猜測"><a href="#猜測" class="headerlink" title="猜測"></a>猜測</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo d</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>會不會其實這樣就可以了呢@@</p><p>或許根本不用動到註解(還要一個一個文章慢慢動，有夠慢)</p><p>不過既然上面成功了，也懶得去多嘗試了</p><p>如果有測試成功可以在下面留言告訴我哦</p><h2 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h2><p>根據<a href="https://stackoverflow.com/questions/17683458/how-do-i-commit-case-sensitive-only-filename-changes-in-git/17688308#17688308" target="_blank" rel="noopener">這篇文章</a></p><p>會發現資料夾中Case Sensitive(只替換大小寫)的動作會被忽略</p><p>其實在Hexo中的tags都會生成在public/tags/</p><p>其中因為public/tags/hexo被替換成public/tags/Hexo這件事被忽略了</p><p>自然也就找不到路徑啦~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;WTF&quot;&gt;&lt;a href=&quot;#WTF&quot; class=&quot;headerlink&quot; title=&quot;WTF?&quot;&gt;&lt;/a&gt;WTF?&lt;/h2&gt;&lt;p&gt;如果你也像我一樣白目想換tags中的大小寫&lt;/p&gt;
&lt;p&gt;例如: hexo -&amp;gt; Hexo&lt;/p&gt;
&lt;p&gt;會發現，疑?&lt;/
      
    
    </summary>
    
      <category term="Hexo" scheme="http://wst24365888.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://wst24365888.github.io/tags/Hexo/"/>
    
      <category term="Tags" scheme="http://wst24365888.github.io/tags/Tags/"/>
    
  </entry>
  
  <entry>
    <title>Hexo &amp; Google Search Console</title>
    <link href="http://wst24365888.github.io/add-google-search-console/"/>
    <id>http://wst24365888.github.io/add-google-search-console/</id>
    <published>2019-06-28T12:33:53.000Z</published>
    <updated>2019-06-28T15:42:38.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="申請-Google-Search-Console"><a href="#申請-Google-Search-Console" class="headerlink" title="申請 Google Search Console"></a>申請 Google Search Console</h2><ol><li>到<a href="https://search.google.com/search-console/welcome" target="_blank" rel="noopener">Google Search Console</a>中，選取右邊那個並貼上你的網站網址(記得先登入Google!)</li></ol><p><img src="044.png" alt></p><ol start="2"><li>下載它所提供的html檔，放到部落格根目錄下”public資料夾”中並發布</li></ol><p><img src="045.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><ol start="3"><li>點下驗證，完成!</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;申請-Google-Search-Console&quot;&gt;&lt;a href=&quot;#申請-Google-Search-Console&quot; class=&quot;headerlink&quot; title=&quot;申請 Google Search Console&quot;&gt;&lt;/a&gt;申請 Google Sear
      
    
    </summary>
    
      <category term="Hexo" scheme="http://wst24365888.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://wst24365888.github.io/tags/Hexo/"/>
    
      <category term="Google Search Console" scheme="http://wst24365888.github.io/tags/Google-Search-Console/"/>
    
      <category term="Google" scheme="http://wst24365888.github.io/tags/Google/"/>
    
  </entry>
  
</feed>
